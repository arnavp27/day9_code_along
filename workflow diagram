graph TD
    Start([START]) --> Init[Initialize State<br/>question, max_iterations=3<br/>reflections=[]]
    
    Init --> Generate[🔵 Generate Answer Node<br/>Creates draft using GPT-4o-mini<br/>+ Previous reflections<br/>+ Search results if available]
    
    Generate --> Evaluate[📊 Evaluate Node<br/>Returns structured JSON:<br/>- score 1-10<br/>- is_acceptable bool<br/>- strengths list<br/>- weaknesses list<br/>- suggestions list<br/>- needs_search bool]
    
    Evaluate --> Router{🔀 Router Logic}
    
    Router -->|Max iterations reached<br/>OR score ≥ 7| Finalize[✨ Finalize Node<br/>Polish and format<br/>final answer]
    
    Router -->|needs_search = true<br/>AND no search yet| Search[🔍 Search Tool Node<br/>Tavily API call<br/>max_results=3<br/>search_depth=advanced]
    
    Router -->|Needs improvement<br/>score < 7| Reflect[💭 Reflection Node<br/>Generate reflection:<br/>- Iteration number<br/>- Weaknesses to address<br/>- Improvement suggestions]
    
    Search --> Generate
    Reflect --> Generate
    
    Finalize --> Save[💾 Save to Memory<br/>Session ID<br/>Complete state<br/>Metadata]
    
    Save --> End([END])
    
    Generate -.->|LangSmith Trace| Trace[📊 Tracing]
    Evaluate -.->|LangSmith Trace| Trace
    Search -.->|LangSmith Trace| Trace
    Reflect -.->|LangSmith Trace| Trace
    Finalize -.->|LangSmith Trace| Trace
    
    Generate -.->|Log State| Memory[(💾 Memory<br/>sessions.json)]
    Evaluate -.->|Log State| Memory
    Search -.->|Log State| Memory
    Reflect -.->|Log State| Memory
    Finalize -.->|Log State| Memory
    
    style Start fill:#90EE90
    style End fill:#FFB6C1
    style Generate fill:#87CEEB
    style Evaluate fill:#DDA0DD
    style Search fill:#F0E68C
    style Reflect fill:#FFB6C1
    style Finalize fill:#98FB98
    style Router fill:#FFA07A
    style Memory fill:#D3D3D3
    style Trace fill:#E6E6FA